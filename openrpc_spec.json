{
    "openrpc": "1.0.0-rc1",
    "info": {
        "version": "0.0.1-rc1",
        "title": "Applicative Paymaster API",
        "license": {}
    },
    "servers": [],
    "methods": [
        {
            "name": "paymaster_getStatus",
            "summary": "Returns the status of the paymaster service",
            "params": [],
            "result": {
                "name": "result",
                "description": "TODO",
                "required": true,
                "schema": {
                    "title": "TODO",
                    "type": "boolean"
                }
            }
        },
        {
            "name": "paymaster_isCompatible",
            "summary": "TODO",
            "params": [
                {
                    "name": "sender_address",
                    "description": "The address of the account that wishes to use the paymaster service",
                    "required": true,
                    "schema": {
                        "title": "Address",
                        "$ref": "#/components/schemas/ADDRESS"
                    }
                }
            ],
            "result": {
                "name": "result",
                "description": "If the address is compatible with some version of outside execution, return the highest compatible version. Else, return zero",
                "required": true,
                "schema": {
                    "title": "Higest compatible version of outside execution, or zero if not supported",
                    "type": "number"
                }
            }
        },
        {
            "name": "paymaster_buildTypedData",
            "summary": "Returns the version of the Starknet JSON-RPC specification being used",
            "params": [
                {
                    "name": "sender_address",
                    "description": "The address of the account that wishes to use the paymaster service",
                    "required": true,
                    "schema": {
                        "title": "Address",
                        "$ref": "#/components/schemas/ADDRESS"
                    }
                },
                {
                    "name": "calls",
                    "description": "The sequence of calls that the user wishes to perform.",
                    "required": true,
                    "schema": {
                        "title": "Calls",
                        "type": "array",
                        "description": "The sequence of calls that the user wishes to perform.",
                        "items": {
                            "$ref": "#/components/schemas/CALL"
                        }
                    }
                },
                {
                    "name": "gas_token_address",
                    "description": "The address of the token contract",
                    "required": true,
                    "schema": {
                        "title": "Gas token",
                        "$ref": "#/components/schemas/ADDRESS"
                    }
                },
                {
                    "name": "max_token_amount",
                    "description": "The maximum amount of tokens (denominated in its smallest unit) that the user allows for payment.",
                    "required": true,
                    "schema": {
                        "title": "Amount",
                        "$ref": "#/components/schemas/u256"
                    }
                },
                {
                    "name": "version",
                    "description": "TODO",
                    "required": true,
                    "schema": {
                        "title": "TODO",
                        "$ref": "TODO"
                    }
                }
            ],
            "result": {
                "name": "result",
                "description": "The typed data which was requested. The version corresponds to the `version` in the paramaters of the method.",
                "schema": {
                    "title": "Typed data",
                    "$ref": "#/components/schemas/TYPED_DATA"
                }
            }
        },
        {
            "name": "paymaster_execute",
            "summary": "TODO",
            "params": [
                {
                    "name": "sender_address",
                    "description": "The address of the account that wishes to use the paymaster service",
                    "required": true,
                    "schema": {
                        "title": "Address",
                        "$ref": "#/components/schemas/ADDRESS"
                    }
                },
                {
                    "name": "typed_data",
                    "description": "TODO",
                    "required": true,
                    "schema": {
                        "title": "Typed data",
                        "$ref": "#/components/schemas/TYPED_DATA"
                    }
                },
                {
                    "name": "signature",
                    "description": "The signature of the user on the typed data",
                    "required": true,
                    "schema": {
                        "title": "Signature",
                        "$ref": "#/components/schemas/SIGNATURE"
                    }
                },
                {
                    "name": "deployment_data",
                    "description": "TODO",
                    "required": true,
                    "schema": {
                        "title": "TODO",
                        "$ref": "TODO"
                    }
                }
            ],
            "result": {
                "name": "transaction_hash",
                "summary": "The hash of the requested transaction",
                "required": true,
                "schema": {
                    "title": "Transaction hash",
                    "$ref": "#/components/schemas/TXN_HASH"
                }
            }
        },
        {
            "name": "paymaster_getSupportedTokensAndPrices",
            "summary": "TODO",
            "params": [],
            "result": {
                "name": "result",
                "description": "TODO",
                "required": true,
                "schema": {
                    "type": "array",
                    "title": "List of tokens",
                    "items": {
                        "$ref": "#/components/schemas/TOKEN_WITH_PRICE"
                    }
                }
            }
        }
    ],
    "components": {
        "contentDescriptors": {},
        "schemas": {
            "ADDRESS": {
                "title": "Address",
                "$ref": "#/components/schemas/FELT"
            },
            "FELT": {
                "type": "string",
                "title": "Field element",
                "description": "A field element. represented by at most 63 hex digits",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
            },
            "u256": {
                "type": "string",
                "title": "u256",
                "description": "64 bit integers, represented by hex string of length at most 64",
                "pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
            },
            "CALL": {
                "title": "Call",
                "description": "The object that defines an invocation of a function in a contract",
                "type": "object",
                "properties": {
                    "contract_address": {
                        "title": "Contract address",
                        "$ref": "#/components/schemas/ADDRESS"
                    },
                    "entry_point_selector": {
                        "title": "Entry point selector",
                        "$ref": "#/components/schemas/FELT"
                    },
                    "calldata": {
                        "type": "array",
                        "title": "Calldata",
                        "description": "Inputs for the entry point function.",
                        "items": {
                            "$ref": "#/components/schemas/FELT"
                        }
                    }
                }
            },
            "TXN_HASH": {
                "$ref": "#/components/schemas/FELT",
                "description": "The transaction hash, as assigned in StarkNet",
                "title": "Transaction hash"
            },
            "TYPED_DATA": {
                "title": "Deploy account transaction",
                "description": "deploys a new account contract",
                "oneOf": [
                    {
                        "title": "Typed data V1",
                        "$ref": "#/components/schemas/TYPED_DATA_V1"
                    },
                    {
                        "title": "Typed data V2",
                        "$ref": "#/components/schemas/TYPED_DATA_V2"
                    },
                    {
                        "title": "Typed data V3",
                        "$ref": "#/components/schemas/TYPED_DATA_V3"
                    }
                ]
            },
            "TYPED_DATA_V1": {},
            "TYPED_DATA_V2": {},
            "TYPED_DATA_V3": {},
            "SIGNATURE": {
                "title": "Signature",
                "description": "A transaction signature",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/FELT"
                }
            },
            "TOKEN_WITH_PRICE": {
                "title": "TODO",
                "description": "TODO",
                "type": "object",
                "properties": {
                    "token_address": {
                        "title": "Token contract address",
                        "$ref": "#/components/schemas/ADDRESS"
                    },
                    "decimals": {
                        "title": "The number of decimals of the token",
                        "type": "number"
                    },
                    "price_in_STRK": {
                        "title": "Price in STRK (in FRI units)",
                        "$ref": "#/components/schemas/u256"
                    }
                }
            }
        }
    }
}